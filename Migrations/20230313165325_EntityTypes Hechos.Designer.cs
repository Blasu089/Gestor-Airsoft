// <auto-generated />
using ApiAirsoft.Util;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiAirsoft.Migrations
{
    [DbContext(typeof(AirsoftDbContext))]
    [Migration("20230313165325_EntityTypes Hechos")]
    partial class EntityTypesHechos
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AccesorioArma", b =>
                {
                    b.Property<int>("AccesoriosCod_Accesorio")
                        .HasColumnType("int");

                    b.Property<int>("ArmasCod_Referencia")
                        .HasColumnType("int");

                    b.HasKey("AccesoriosCod_Accesorio", "ArmasCod_Referencia");

                    b.HasIndex("ArmasCod_Referencia");

                    b.ToTable("AccesorioArma");
                });

            modelBuilder.Entity("AccesorioColor", b =>
                {
                    b.Property<int>("AccesoriosCod_Accesorio")
                        .HasColumnType("int");

                    b.Property<int>("ColoresCod_Color")
                        .HasColumnType("int");

                    b.HasKey("AccesoriosCod_Accesorio", "ColoresCod_Color");

                    b.HasIndex("ColoresCod_Color");

                    b.ToTable("AccesorioColor");
                });

            modelBuilder.Entity("AccionArma", b =>
                {
                    b.Property<int>("AccionesCod_Accion")
                        .HasColumnType("int");

                    b.Property<int>("ArmasCod_Referencia")
                        .HasColumnType("int");

                    b.HasKey("AccionesCod_Accion", "ArmasCod_Referencia");

                    b.HasIndex("ArmasCod_Referencia");

                    b.ToTable("AccionArma");
                });

            modelBuilder.Entity("ApiAirsoft.Modelos.Armas.Accesorio", b =>
                {
                    b.Property<int>("Cod_Accesorio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Cod_Accesorio"), 1L, 1);

                    b.Property<string>("Foto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Material")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Serie")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Cod_Accesorio");

                    b.ToTable("Accesorio");
                });

            modelBuilder.Entity("ApiAirsoft.Modelos.Armas.Accion", b =>
                {
                    b.Property<int>("Cod_Accion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Cod_Accion"), 1L, 1);

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Cod_Accion");

                    b.ToTable("Accion");
                });

            modelBuilder.Entity("ApiAirsoft.Modelos.Armas.Arma", b =>
                {
                    b.Property<int>("Cod_Referencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Cod_Referencia"), 1L, 1);

                    b.Property<int>("Capacidad_Cargador")
                        .HasColumnType("int");

                    b.Property<string>("Foto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HopUp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("Longitud")
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Material")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Peso")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Potencia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Serie")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Tipo Arma")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Velocidad")
                        .HasColumnType("int");

                    b.HasKey("Cod_Referencia");

                    b.ToTable("Armas");

                    b.HasDiscriminator<string>("Tipo Arma").HasValue("Arma");
                });

            modelBuilder.Entity("ApiAirsoft.Modelos.Armas.Disparo", b =>
                {
                    b.Property<int>("Cod_Disparo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Cod_Disparo"), 1L, 1);

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Cod_Disparo");

                    b.ToTable("Disparo");
                });

            modelBuilder.Entity("ApiAirsoft.Modelos.Color", b =>
                {
                    b.Property<int>("Cod_Color")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Cod_Color"), 1L, 1);

                    b.Property<string>("Hexadecimal")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Cod_Color");

                    b.ToTable("Colores");
                });

            modelBuilder.Entity("ApiAirsoft.Modelos.Ropas.Lentes", b =>
                {
                    b.Property<int>("Cod_Lentes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Cod_Lentes"), 1L, 1);

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Cod_Lentes");

                    b.ToTable("Lentes");
                });

            modelBuilder.Entity("ApiAirsoft.Modelos.Ropas.Ropa", b =>
                {
                    b.Property<int>("Cod_Ropa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Cod_Ropa"), 1L, 1);

                    b.Property<string>("Foto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Material")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Tipo Ropa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Cod_Ropa");

                    b.ToTable("Ropa");

                    b.HasDiscriminator<string>("Tipo Ropa").HasValue("Ropa");
                });

            modelBuilder.Entity("ApiAirsoft.Modelos.Ropas.Talla", b =>
                {
                    b.Property<int>("Cod_Talla")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Cod_Talla"), 1L, 1);

                    b.Property<string>("Talla_Americana")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Talla_Europea")
                        .HasColumnType("int");

                    b.HasKey("Cod_Talla");

                    b.ToTable("Talla");
                });

            modelBuilder.Entity("ArmaColor", b =>
                {
                    b.Property<int>("ArmasCod_Referencia")
                        .HasColumnType("int");

                    b.Property<int>("ColoresCod_Color")
                        .HasColumnType("int");

                    b.HasKey("ArmasCod_Referencia", "ColoresCod_Color");

                    b.HasIndex("ColoresCod_Color");

                    b.ToTable("ArmaColor");
                });

            modelBuilder.Entity("ArmaDisparo", b =>
                {
                    b.Property<int>("ArmasCod_Referencia")
                        .HasColumnType("int");

                    b.Property<int>("DisparosCod_Disparo")
                        .HasColumnType("int");

                    b.HasKey("ArmasCod_Referencia", "DisparosCod_Disparo");

                    b.HasIndex("DisparosCod_Disparo");

                    b.ToTable("ArmaDisparo");
                });

            modelBuilder.Entity("ColorRopa", b =>
                {
                    b.Property<int>("ColoresCod_Color")
                        .HasColumnType("int");

                    b.Property<int>("RopasCod_Ropa")
                        .HasColumnType("int");

                    b.HasKey("ColoresCod_Color", "RopasCod_Ropa");

                    b.HasIndex("RopasCod_Ropa");

                    b.ToTable("ColorRopa");
                });

            modelBuilder.Entity("GafasLentes", b =>
                {
                    b.Property<int>("GafasCod_Ropa")
                        .HasColumnType("int");

                    b.Property<int>("LentesCod_Lentes")
                        .HasColumnType("int");

                    b.HasKey("GafasCod_Ropa", "LentesCod_Lentes");

                    b.HasIndex("LentesCod_Lentes");

                    b.ToTable("GafasLentes");
                });

            modelBuilder.Entity("RopaTalla", b =>
                {
                    b.Property<int>("RopasCod_Ropa")
                        .HasColumnType("int");

                    b.Property<int>("TallasCod_Talla")
                        .HasColumnType("int");

                    b.HasKey("RopasCod_Ropa", "TallasCod_Talla");

                    b.HasIndex("TallasCod_Talla");

                    b.ToTable("RopaTalla");
                });

            modelBuilder.Entity("ApiAirsoft.Modelos.Armas.Escopeta", b =>
                {
                    b.HasBaseType("ApiAirsoft.Modelos.Armas.Arma");

                    b.Property<int>("Capacidad_Cartucho")
                        .HasColumnType("int");

                    b.Property<bool>("Cartuchos_Incluidos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasDiscriminator().HasValue("Escopeta");
                });

            modelBuilder.Entity("ApiAirsoft.Modelos.Armas.Francotirador", b =>
                {
                    b.HasBaseType("ApiAirsoft.Modelos.Armas.Arma");

                    b.Property<bool>("Bipode_Incluido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("Mira_Incluida")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasDiscriminator().HasValue("Francotirador");
                });

            modelBuilder.Entity("ApiAirsoft.Modelos.Armas.Fusil", b =>
                {
                    b.HasBaseType("ApiAirsoft.Modelos.Armas.Arma");

                    b.HasDiscriminator().HasValue("Fusil");
                });

            modelBuilder.Entity("ApiAirsoft.Modelos.Armas.Pistola", b =>
                {
                    b.HasBaseType("ApiAirsoft.Modelos.Armas.Arma");

                    b.HasDiscriminator().HasValue("Pistola");
                });

            modelBuilder.Entity("ApiAirsoft.Modelos.Armas.Subfusil", b =>
                {
                    b.HasBaseType("ApiAirsoft.Modelos.Armas.Arma");

                    b.HasDiscriminator().HasValue("Subfusil");
                });

            modelBuilder.Entity("ApiAirsoft.Modelos.Ropas.Botas", b =>
                {
                    b.HasBaseType("ApiAirsoft.Modelos.Ropas.Ropa");

                    b.Property<bool>("Revestimiento_Metalico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasDiscriminator().HasValue("Botas");
                });

            modelBuilder.Entity("ApiAirsoft.Modelos.Ropas.Camiseta", b =>
                {
                    b.HasBaseType("ApiAirsoft.Modelos.Ropas.Ropa");

                    b.Property<bool>("Manga_Larga")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasDiscriminator().HasValue("Camiseta");
                });

            modelBuilder.Entity("ApiAirsoft.Modelos.Ropas.Casco", b =>
                {
                    b.HasBaseType("ApiAirsoft.Modelos.Ropas.Ropa");

                    b.Property<bool>("Acolchado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<decimal>("Peso")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Casco_Peso");

                    b.Property<bool>("Riel_Frontal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("Rieles_Laterales")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasDiscriminator().HasValue("Casco");
                });

            modelBuilder.Entity("ApiAirsoft.Modelos.Ropas.Chaleco", b =>
                {
                    b.HasBaseType("ApiAirsoft.Modelos.Ropas.Ropa");

                    b.Property<int>("Num_Portacargadores")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasDiscriminator().HasValue("Chaleco");
                });

            modelBuilder.Entity("ApiAirsoft.Modelos.Ropas.Gafas", b =>
                {
                    b.HasBaseType("ApiAirsoft.Modelos.Ropas.Ropa");

                    b.HasDiscriminator().HasValue("Gafas");
                });

            modelBuilder.Entity("ApiAirsoft.Modelos.Ropas.Guantes", b =>
                {
                    b.HasBaseType("ApiAirsoft.Modelos.Ropas.Ropa");

                    b.Property<bool>("Mitones")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasDiscriminator().HasValue("Guantes");
                });

            modelBuilder.Entity("ApiAirsoft.Modelos.Ropas.Mascara", b =>
                {
                    b.HasBaseType("ApiAirsoft.Modelos.Ropas.Ropa");

                    b.Property<bool>("FullFace")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<decimal>("Peso")
                        .HasColumnType("decimal(18,2)");

                    b.HasDiscriminator().HasValue("Mascara");
                });

            modelBuilder.Entity("ApiAirsoft.Modelos.Ropas.Pantalon", b =>
                {
                    b.HasBaseType("ApiAirsoft.Modelos.Ropas.Ropa");

                    b.Property<int>("Num_Bolsillos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(2);

                    b.HasDiscriminator().HasValue("Pantalon");
                });

            modelBuilder.Entity("AccesorioArma", b =>
                {
                    b.HasOne("ApiAirsoft.Modelos.Armas.Accesorio", null)
                        .WithMany()
                        .HasForeignKey("AccesoriosCod_Accesorio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiAirsoft.Modelos.Armas.Arma", null)
                        .WithMany()
                        .HasForeignKey("ArmasCod_Referencia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AccesorioColor", b =>
                {
                    b.HasOne("ApiAirsoft.Modelos.Armas.Accesorio", null)
                        .WithMany()
                        .HasForeignKey("AccesoriosCod_Accesorio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiAirsoft.Modelos.Color", null)
                        .WithMany()
                        .HasForeignKey("ColoresCod_Color")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AccionArma", b =>
                {
                    b.HasOne("ApiAirsoft.Modelos.Armas.Accion", null)
                        .WithMany()
                        .HasForeignKey("AccionesCod_Accion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiAirsoft.Modelos.Armas.Arma", null)
                        .WithMany()
                        .HasForeignKey("ArmasCod_Referencia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ArmaColor", b =>
                {
                    b.HasOne("ApiAirsoft.Modelos.Armas.Arma", null)
                        .WithMany()
                        .HasForeignKey("ArmasCod_Referencia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiAirsoft.Modelos.Color", null)
                        .WithMany()
                        .HasForeignKey("ColoresCod_Color")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ArmaDisparo", b =>
                {
                    b.HasOne("ApiAirsoft.Modelos.Armas.Arma", null)
                        .WithMany()
                        .HasForeignKey("ArmasCod_Referencia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiAirsoft.Modelos.Armas.Disparo", null)
                        .WithMany()
                        .HasForeignKey("DisparosCod_Disparo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ColorRopa", b =>
                {
                    b.HasOne("ApiAirsoft.Modelos.Color", null)
                        .WithMany()
                        .HasForeignKey("ColoresCod_Color")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiAirsoft.Modelos.Ropas.Ropa", null)
                        .WithMany()
                        .HasForeignKey("RopasCod_Ropa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GafasLentes", b =>
                {
                    b.HasOne("ApiAirsoft.Modelos.Ropas.Gafas", null)
                        .WithMany()
                        .HasForeignKey("GafasCod_Ropa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiAirsoft.Modelos.Ropas.Lentes", null)
                        .WithMany()
                        .HasForeignKey("LentesCod_Lentes")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RopaTalla", b =>
                {
                    b.HasOne("ApiAirsoft.Modelos.Ropas.Ropa", null)
                        .WithMany()
                        .HasForeignKey("RopasCod_Ropa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiAirsoft.Modelos.Ropas.Talla", null)
                        .WithMany()
                        .HasForeignKey("TallasCod_Talla")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
